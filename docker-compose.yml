version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: ai-mmo-postgres
    environment:
      POSTGRES_DB: ai_mmo
      POSTGRES_USER: ai_mmo
      POSTGRES_PASSWORD: dev_password_change_in_prod
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_mmo -d ai_mmo"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    container_name: ai-mmo-redis
    command: redis-server --appendonly yes --requirepass dev_redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # MinIO for object storage
  minio:
    image: minio/minio:latest
    container_name: ai-mmo-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ai_mmo_admin
      MINIO_ROOT_PASSWORD: dev_minio_password_change_in_prod
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Ollama for AI models
  ollama:
    image: ollama/ollama:latest
    container_name: ai-mmo-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/version"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: ai-mmo-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./infra/docker/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    depends_on:
      - postgres
      - redis

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: ai-mmo-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SECURITY_ADMIN_USER: admin
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infra/docker/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus

  # Jaeger for tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: ai-mmo-jaeger
    environment:
      COLLECTOR_OTLP_ENABLED: true
    ports:
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
    volumes:
      - jaeger_data:/tmp

  # NATS for messaging
  nats:
    image: nats:alpine
    container_name: ai-mmo-nats
    command: ["--jetstream", "--store_dir", "/data"]
    ports:
      - "4222:4222"
      - "8222:8222"
      - "6222:6222"
    volumes:
      - nats_data:/data

  # Development services (commented out by default)
  
  # Adminer for database management
  adminer:
    image: adminer
    container_name: ai-mmo-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    profiles:
      - dev

  # Mailhog for email testing
  mailhog:
    image: mailhog/mailhog
    container_name: ai-mmo-mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  ollama_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  jaeger_data:
    driver: local
  nats_data:
    driver: local

networks:
  default:
    name: ai-mmo-network